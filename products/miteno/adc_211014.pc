/******************************************************************
 * 交易名称: 梅泰诺KEK下载
 * 生成日期: 2015-4-21 15:52:23
 * 作    者: zhouhd
 ******************************************************************/
#include "udo.h"
#include "log.h"
#include "adc_syserr.h"
#include "pub_base.h"
#include "dic_public.h"
#include "dic_account.h"
#include "common.h"
#include "adc_global.h"
#include "svc_define.h"
#include "apyfunc.h"
	 
EXEC SQL INCLUDE SQLCA;

EXEC SQL include "svc_struct.h";


#define CHECK_HAVE_ALL_FIELD( aczTranCode, pstInList, pstOutList )\
{\
    int nTmpVar = 0;\
    int FIELD_ID_LIST[] =\
    {\
        PROCESSCODE,\
        MERCHANTID,\
        TERMID,\
        TXDATE,\
        TXTIME,\
        OPERID,\
        CHANNELID,\
        CHDATE,\
        CHTIME,\
        CHTXCODE,\
        CHSERIAL,\
        SYSDATE,\
    };\
    for( nTmpVar = 0; nTmpVar < sizeof(FIELD_ID_LIST)/sizeof(int); nTmpVar++ )\
    {\
        if( !UDO_FieldExist( pstInList, FIELD_ID_LIST[nTmpVar] ) )\
        {\
            char aczRetCode[30], aczRetMessage[40];\
            sprintf( aczRetCode, "%s%03d", aczTranCode, NO_REQUIRED_FIELD );\
            sprintf( aczRetMessage, "缺少要求的字段 %d", FIELD_ID_LIST[nTmpVar] );\
            LOG4C(( LOG_WARN, "%s", aczRetMessage ));\
            UDO_AddField( pstOutList, RESPONSE, UDT_STRING, aczRetCode, 9 );\
            UDO_AddField( pstOutList, RETMSG, UDT_STRING, aczRetMessage,strlen(aczRetMessage) );\
            return -1;\
        }\
    }\
}

int adc_211014_main(UDP epstInList, UDP opstOutList)
{
    int nRet=0,nLen=0;
    EXEC SQL BEGIN DECLARE SECTION;
    char    I_ProcessCode[6+1];                 /* 处理码 */
    char    I_MerchantId[15+1];                 /* 商户号 */
    char    I_TermId[8+1];                      /* 终端号 */
    char    I_TxDate[8+1];                      /* 平台账务日期 */
    char    I_TxTime[6+1];                      /* 交易时间 */
    char    I_OperId[12+1];                     /* 操作员号 */
    char    I_Channelid[3+1];                   /* 渠道号 */
    char    I_ChDate[8+1];                      /* 渠道日期 */
    char    I_ChTime[6+1];                      /* 渠道时间 */
    char    I_ChTxCode[6+1];                    /* 渠道处理码 */
    char    I_ChSerial[6+1];                    /* 渠道流水 */
    char    I_SysDate[8+1];                     /* 系统日期 */
    char    O_Response[10+1];                   /* 响应代码 */
    char    O_RetMsg[64+1];                     /* 响应信息 */
    char    O_PinkeyMackey[80+1];               /* 存放下发的密钥信息 */
    char    O_HoDate[8+1];                      /* 主机日期 */
    char    O_HoTime[6+1];                      /* 主机时间 */
	char	aczMk[17];
	char	aczDesMk[33];
	char	aczBuf[33];
	char	aczCheck[17];
	T_SVC_Miteno_Terminal	  stTerm;
    EXEC SQL END DECLARE SECTION;
    /*请在此添加EC变量*/
	int i=0;
	ST_TERM_LOGIN_REQ stReq;
	ST_TERM_LOGIN_RSP stRsp;

    CHECK_HAVE_ALL_FIELD( "adc_211014", epstInList, opstOutList )


    memset( I_ProcessCode, 0, sizeof(I_ProcessCode) );
    memset( I_MerchantId, 0, sizeof(I_MerchantId) );
    memset( I_TermId, 0, sizeof(I_TermId) );
    memset( I_TxDate, 0, sizeof(I_TxDate) );
    memset( I_TxTime, 0, sizeof(I_TxTime) );
    memset( I_OperId, 0, sizeof(I_OperId) );
    memset( I_Channelid, 0, sizeof(I_Channelid) );
    memset( I_ChDate, 0, sizeof(I_ChDate) );
    memset( I_ChTime, 0, sizeof(I_ChTime) );
    memset( I_ChTxCode, 0, sizeof(I_ChTxCode) );
    memset( I_ChSerial, 0, sizeof(I_ChSerial) );
    memset( I_SysDate, 0, sizeof(I_SysDate) );
    memset( O_Response, 0, sizeof(O_Response) );
    memset( O_RetMsg, 0, sizeof(O_RetMsg) );
    memset( O_PinkeyMackey, 0, sizeof(O_PinkeyMackey) );
    memset( O_HoDate, 0, sizeof(O_HoDate) );
    memset( O_HoTime, 0, sizeof(O_HoTime) );

    /*取域<1-处理码>的值*/
    UDO_GetField( epstInList, PROCESSCODE, 0, I_ProcessCode, &nLen );

    /*取域<4-商户号>的值*/
    UDO_GetField( epstInList, MERCHANTID, 0, I_MerchantId, &nLen );

    /*取域<5-终端号>的值*/
    UDO_GetField( epstInList, TERMID, 0, I_TermId, &nLen );

    /*取域<12-平台账务日期>的值*/
    UDO_GetField( epstInList, TXDATE, 0, I_TxDate, &nLen );

    /*取域<13-交易时间>的值*/
    UDO_GetField( epstInList, TXTIME, 0, I_TxTime, &nLen );

    /*取域<14-操作员号>的值*/
    UDO_GetField( epstInList, OPERID, 0, I_OperId, &nLen );

    /*取域<17-渠道号>的值*/
    UDO_GetField( epstInList, CHANNELID, 0, I_Channelid, &nLen );

    /*取域<26-渠道日期>的值*/
    UDO_GetField( epstInList, CHDATE, 0, I_ChDate, &nLen );

    /*取域<27-渠道时间>的值*/
    UDO_GetField( epstInList, CHTIME, 0, I_ChTime, &nLen );

    /*取域<32-渠道处理码>的值*/
    UDO_GetField( epstInList, CHTXCODE, 0, I_ChTxCode, &nLen );

    /*取域<33-渠道流水>的值*/
    UDO_GetField( epstInList, CHSERIAL, 0, I_ChSerial, &nLen );

    /*取域<54-系统日期>的值*/
    UDO_GetField( epstInList, SYSDATE, 0, I_SysDate, &nLen );

    /*
     * TODO: 在此添加绘制代码
     */
	PUB_StrTrim( I_TermId, ' ' );
	PUB_StrTrim( I_MerchantId, ' ' );

	memcpy(O_HoDate, I_ChDate, 8);
	memcpy(O_HoTime, I_ChTime, 6);

	memset((char *)&stReq, 0, sizeof(stReq));
	memset((char *)&stRsp, 0, sizeof(stRsp));

	strcpy(stReq.szTransCode, I_ProcessCode);
	strcpy(stReq.szMerchantID, I_MerchantId);
	strcpy(stReq.szTermID, I_TermId);
	strcpy(stReq.szDate, I_ChDate);
	strcpy(stReq.szTime, I_ChTime);
	strcpy(stReq.szTrace, I_ChSerial);
	
	
	nRet=UpdateAndInsertMitenoTerm(&stReq, &stRsp, &stTerm, O_RetMsg);
	if(nRet != 0)
	{
	   strcpy( O_Response, "211014001" );
	   strcpy( O_RetMsg, "系统故障" );
	   goto ErrorOut;
	}
	
	if(stRsp.nResp != 0)
	{
	  strcpy( O_Response, "211014002" );
	  strncpy(O_RetMsg, stRsp.szRespInfo, 40);
	  goto ErrorOut;
	}


	/*更新主密钥*/

	memset(aczBuf, 0, sizeof(aczBuf));
	memset(aczCheck, 0, sizeof(aczCheck));
	srandom(time(NULL));
	for( i=0; i<16; i++ )
	{
		aczMk[i] = random()%256;
	}
	mydes3( aczBuf, aczCheck, aczMk, 0 );

	
	memcpy(aczBuf, aczMk, 16);
	memcpy( aczBuf+16, aczCheck, 4 );
	
	TOOL_ConvertBCD2Ascii( aczBuf, 40, O_PinkeyMackey );
	
	memset( aczDesMk, 0, sizeof(aczDesMk) );
	EncryptKey( aczDesMk, aczMk );
	EncryptKey( aczDesMk+16, aczMk+8 );
	
	PUB_StrTrim( I_MerchantId, ' ' );
	PUB_StrTrim( I_TermId, ' ' );
	
	EXEC SQL UPDATE Svc_Miteno_Terminal SET MainKey = :aczDesMk
		WHERE code=:I_TermId and merchant_code=:I_MerchantId;
	if ( SQLCODE  )
	{
		if( SQLCODE == SQLNOTFOUND )
		{
			strcpy( O_Response, "211014003" );
			strcpy( O_RetMsg, "不存在该商户号或终端号" );
		}
		else
		{
			strcpy( O_Response, "211014004" );
			strcpy( O_RetMsg, "重置该设备主密钥失败" );
		}
		LOG4C(( LOG_FATAL, "SQLCODE[%d] [商户号:%s][终端号:%s]", SQLCODE, I_MerchantId, I_TermId ));
		goto ErrorOut;
	}
	EXEC SQL COMMIT WORK;
	
	memcpy(O_HoDate, stRsp.szHostDate, 8);
	memcpy(O_HoTime, stRsp.szHostTime, 6);
	strcpy( O_Response, "000000000" );
	strcpy( O_RetMsg, "交易成功" );

ErrorOut:

    /*给域<2-响应代码>赋值*/
    UDO_AddField( opstOutList, RESPONSE, UDT_STRING, O_Response, strlen(O_Response) );

    /*给域<3-响应信息>赋值*/
    UDO_AddField( opstOutList, RETMSG, UDT_STRING, O_RetMsg, strlen(O_RetMsg) );

    /*给域<60-存放下发的密钥信息>赋值*/
    UDO_AddField( opstOutList, PINKEYMACKEY, UDT_STRING, O_PinkeyMackey, strlen(O_PinkeyMackey) );

    /*给域<72-主机日期>赋值*/
    UDO_AddField( opstOutList, HODATE, UDT_STRING, O_HoDate, strlen(O_HoDate) );

    /*给域<73-主机时间>赋值*/
    UDO_AddField( opstOutList, HOTIME, UDT_STRING, O_HoTime, strlen(O_HoTime) );

    return 0;
}
